<?php

/**
 * NTAS Supported Alert levels: http://www.dhs.gov/ntas-api-documentation
 * @see "The new NTAS system supports only two states"
 */
function playbox_ntas_threat_level_is_elevated() {
  $threat_cid = 'playbox_ntas_threat_level';
  $cache = cache_get($threat_cid);
  if (empty($cache->data->level)) {
    $uri = 'http://www.dhs.gov/ntas/1.0/alerts.xml';
    //$uri = 'http://www.dhs.gov/ntas/1.0/sample-feed.xml';
    $response = drupal_http_request($uri);
    if (empty($response->error)) {
      $xml = new SimpleXMLElement($response->data);
      $alert = $xml->xpath('//alert');
      // As per NTAS documentation alert is either "high/critical" or none.
      // Thus we don't care what the actual alert is, as long as there's any at all.
      $status = (object) array(
        'level' => 'none',
      );

      if (count($alert)) {
        $alert->level = 'high';
      }

      // Lets be nice and avoid hitting NTAS api frequently.
      $ntas_cache_lifespan = (int) variable_get('ntas_cache_lifespan', 60*60);
      cache_set($threat_cid, $status, "cache", $ntas_cache_lifespan);
      $cache = cache_get($threat_cid);
    }
  }

  return !empty($cache->data->level) && $cache->data->level == 'high';
}

function playbox_ntas_views_post_execute(&$view) {
  if ('playbox_battles' == $view->name && 'playbox_battles_featured_1' == $view->current_display) {
    $threat_level_is_elevated = playbox_ntas_threat_level_is_elevated() || true;
    if ($threat_level_is_elevated) {
      // Find values to copy from VP to president when threat is high.
      // i.e. "swap pres for VP"
      $copy_map = array();
      foreach ($view->field as $key => $field) {
        if (in_array($field->relationship, array('node_field_data_field_playbox_president'))) {
          $copy_map['president'][$field->field_info['field_name']] = $field->options['id'];
        }
        elseif (in_array($field->relationship, array('node_field_data_field_second_in_command'))) {
          $copy_map['vp'][$field->field_info['field_name']] = $field->options['id'];
        }
      }

      // Swap VP for pres.
      if (!empty($copy_map['vp'])) {
        foreach ($copy_map['vp'] as $key => $field_alias) {
          // Only attempt override when both president and VP have the same field.
          if (!empty($copy_map['president'][$key])) {
            $pres_key = 'field_' . $copy_map['president'][$key];
            $vp_key = 'field_' . $field_alias;
            foreach (array_keys($view->result) as $index) {
              if (!empty($view->result[$index]->{$vp_key})) {
              $view->result[$index]->{$pres_key} = $view->result[$index]->{$vp_key};
              }
            }
          }
        }
      }


    }
  }
}
